{"version":3,"sources":["Utility/FakeStore.js","Products Overview/ProductListItem.js","Products Overview/CategoryList.js","common/Button.js","Products Overview/ProductsList.js","Contexts/CartContext.js","Product Details/AddToCart.js","Navbar/GoBackNavbar.js","Product Details/Product Details.js","hooks/index.js","Navbar/Main Site Navbar.js","Providers/CartProvider.js","Cart/CartItem.js","Cart/Cart.js","Checkout/ShippingAddressForm.js","Utility/CreditCard.js","Checkout/MonthSelectBox.js","Checkout/YearSelectBox.js","Checkout/CreditCardForm.js","Cart/CartList.js","Checkout/BillingAddressForm.js","Utility/ShippingAndTaxes.js","Checkout/Checkout.js","App.js","reportWebVitals.js","index.js"],"names":["fakeURLStart","getAllProducts","a","fetch","response","json","data","console","log","getSingleProduct","id","apiURL","getCategories","HighlightedRow","styled","Row","ProductListItem","title","image","price","category","description","handleProdDet","onClick","Col","md","Image","src","alt","thumbnail","toFixed","CategoryList","props","useState","categories","setCategories","useEffect","then","JSON","stringify","InputGroup","className","Prepend","Text","Form","Control","as","length","map","idx","StyledButton","Button","ProductsList","products","setProducts","filtCategory","setFiltCategory","filteredList","setFilteredList","sortBy","setSortBy","search","setSearch","doSearch","setDoSearch","push","useHistory","loading","Spinner","animation","role","generateList","myProducts","filter","product","toLowerCase","sort","el1","el2","parseFloat","price1","Container","onChange","e","newCat","target","value","selectedIndex","FormControl","placeholder","aria-label","aria-describedby","onKeyUp","key","Append","style","width","fluid","CartContext","createContext","displayName","AddToCart","AddItem","useContext","qty","setQty","Modal","show","onHide","size","aria-labelledby","centered","Header","closeButton","Title","Body","inline","Label","htmlFor","srOnly","type","name","min","event","preventDefault","parseInt","previousElementSibling","GoBackNavbar","history","Navbar","process","goBack","cursor","ProductDetails","setProduct","modalShow","setModalShow","index","useParams","Object","keys","rounded","useCart","StyledNavbarBrand","Brand","MainSiteNavbar","cartQty","bg","variant","fontFamily","to","Toggle","aria-controls","Collapse","Nav","display","alignContent","Badge","CartProvider","children","cart","setCart","setCartQty","cartTotalPrice","setCartPrice","Provider","CartItem","RemoveItem","splice","UpdateQty","ClearCart","newQty","setNewQty","border","Cart","ShippingAddressForm","validated","setValidated","fName","setFName","lName","setLName","address1","setAddress1","address2","setAddress2","city","setCity","state","setState","zip","setZip","noValidate","onSubmit","form","currentTarget","checkValidity","stopPropagation","saveShipAddress","Group","controlId","required","Feedback","Luhn","testNum","i","arrOfNum","IntToArray","AddDigits","sum","forEach","dig","num","numAsStr","arr","split","element","isVisa","test","isMasterCard","isAmericanExpress","isDinersClub","isDiscover","isJCB","MonthSelectBox","custom","YearSelectBox","CreditCardForm","ccNum","setCCNum","expMonth","setExpMonth","expYear","setExpYear","secNum","setSecNum","validCCNum","setValidCCNum","saveCCInfo","onBlur","ccIsValid","isInvalid","maxLength","minLength","muted","CartList","BillingAddressForm","saveBillAddress","Check","label","checked","calcShipping","numItems","calcTaxes","totalPrice","CheckoutCard","Card","Checkout","shipAddresss","setShipAddress","ccInfo","setccInfo","billAddress","setBillAddress","orderCompleteMessage","setOrderCompleteMessage","Accordion","defaultActiveKey","eventKey","newAdd","newCC","Footer","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be6a6012.chunk.js","sourcesContent":["const fakeURLStart = 'https://fakestoreapi.com/';\r\n\r\nexport const getAllProducts = async () => {\r\n    const apiURL = fakeURLStart + 'products';\r\n    const response = await fetch(apiURL);\r\n    const data = await response.json();\r\n    console.log(data);\r\n    return data;\r\n};\r\n\r\nexport const getSingleProduct = async (id) => {\r\n    const apiURL = fakeURLStart + `products/${id}`;\r\n    const response = await fetch(apiURL);\r\n    const data = await response.json();\r\n    console.log(data);\r\n    return data;\r\n}\r\n\r\nexport const getCategories = async () => {\r\n    const apiURL = 'https://fakestoreapi.com/products/categories';\r\n    const response = await fetch(apiURL);\r\n    const data=await response.json();\r\n    console.log(data);\r\n    return data;\r\n}","import Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HighlightedRow = styled(Row)`\r\n    background-color: black;\r\n    color: white;   \r\n    border: 5px solide white;\r\n    padding: 5px;\r\n    width: 100%;\r\n\r\n    &:hover {\r\n        background-color: gray;\r\n    }\r\n\r\n`\r\n\r\nconst ProductListItem = ({title, image, category, description, price, handleProdDet}) => {\r\n    return (\r\n        <HighlightedRow onClick={handleProdDet}>\r\n            <Col md={3}>\r\n                <Image src={image} alt='Product' thumbnail />\r\n            </Col>  \r\n            <Col md={9}>\r\n                <h2>{title}</h2>\r\n                <p>${price.toFixed(2)}</p>\r\n            </Col>\r\n        </HighlightedRow>\r\n    )\r\n}\r\n\r\nexport default ProductListItem;","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { getCategories } from \"../Utility/FakeStore\";\r\n\r\nconst CategoryList = (props) => {\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getCategories().then(setCategories);\r\n    }, [JSON.stringify(categories)]);\r\n\r\n    return (\r\n        <InputGroup className='mb-3'>\r\n            <InputGroup.Prepend>\r\n                <InputGroup.Text>Categories</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control as='select' {...props}>\r\n                <option>---</option>\r\n                {categories.length ? categories.map((category, idx) => {\r\n                    return (<option key={idx}>{category}</option>)\r\n                }): <></>}\r\n            </Form.Control>\r\n        </InputGroup>\r\n    )\r\n}\r\n\r\nexport default CategoryList;","import Button from \"react-bootstrap/Button\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledButton = styled(Button)`\r\n`\r\n\r\nexport default StyledButton;","import { useEffect, useState } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { getAllProducts } from \"../Utility/FakeStore\";\r\nimport ProductListItem from \"./ProductListItem\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CategoryList from \"./CategoryList\";\r\nimport { Col, Form, FormControl, InputGroup, Row } from \"react-bootstrap\";\r\nimport StyledButton from \"../common/Button\";\r\n\r\nconst ProductsList = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [filtCategory, setFiltCategory] = useState('---');\r\n    const [filteredList, setFilteredList] = useState([]);\r\n    const [sortBy, setSortBy] = useState(0);\r\n    const [search, setSearch] = useState('');\r\n    const [doSearch, setDoSearch] = useState(false);\r\n\r\n    const {push} = useHistory();\r\n\r\n    useEffect(() => {\r\n        getAllProducts().then(setProducts);\r\n    },[JSON.stringify(products)])\r\n\r\n    const loading = <Spinner animation='border' role='status'>\r\n        <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>;\r\n\r\n    const generateList = (myProducts=products) => {\r\n        if(doSearch) {\r\n            myProducts = myProducts.filter(product => product.title.toLowerCase().search(search) >= 0)\r\n        }\r\n\r\n        switch (sortBy) {\r\n            case 1: // Price: Low to High\r\n                myProducts.sort((el1, el2) => {\r\n                    const price1 = parseFloat(el1.price);\r\n                    const price2 = parseFloat(el2.price);\r\n                    return price1-price2;\r\n                })\r\n                break;\r\n            case 2: // Price: High to Low\r\n                myProducts.sort((el1, el2) => {\r\n                    const price1 = parseFloat(el1.price);\r\n                    const price2 = parseFloat(el2.price);\r\n                    return price2-price1;\r\n                })\r\n                break;\r\n            case 0: // Category\r\n            default:\r\n                myProducts.sort((el1, el2) => {\r\n                    if(el1.category > el2.category) {\r\n                        return -1;\r\n                    } else if (el1.category < el2.category) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n\r\n                })\r\n                break;\r\n        }\r\n\r\n        return myProducts.map(({title, image, price, description, category, id}) => {\r\n            const handleProductDetail = () => {\r\n                push(`/products/${id}`);\r\n            }\r\n            return(\r\n                <ProductListItem\r\n                    key={title}\r\n                    title={title}\r\n                    image={image}\r\n                    price={price}\r\n                    description={description}\r\n                    category={category}\r\n                    handleProdDet={handleProductDetail} \r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    const handleCategoryFilter = (e) => {\r\n        const newCat = e.target.value;\r\n        setFiltCategory(newCat);\r\n        if(newCat !== '---'){\r\n            setFilteredList(products.filter(product => product.category === newCat))\r\n        }\r\n    }\r\n\r\n    const handleSort = (e) => {\r\n        setSortBy(e.target.selectedIndex);\r\n    }\r\n\r\n    const handleClearSearch = () => {\r\n        setSearch('');\r\n        setDoSearch(false);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={3}>\r\n                <CategoryList onChange={handleCategoryFilter} />\r\n                </Col>\r\n                <Col md={3}>\r\n                <InputGroup className='mb-3'>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text id='sort-list'>Sort by...</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control as='select' onChange={handleSort}>\r\n                        <option>Category</option>\r\n                        <option>Price: Low to High</option>\r\n                        <option>Price: High to Low</option>\r\n                    </Form.Control>\r\n                </InputGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                    <InputGroup className='mb-3'>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text id=\"search-box\">Search</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl \r\n                            placeholder='Search'\r\n                            aria-label='Search'\r\n                            aria-describedby='search-box'\r\n                            value={search}\r\n                            onChange={(e) => setSearch(e.target.value)}\r\n                            onKeyUp={(e) => {\r\n                                console.log(e)\r\n                                if(e.key === 'Enter'){\r\n                                    setDoSearch(true)\r\n                                }\r\n                            }}\r\n                        />\r\n                        <InputGroup.Append>\r\n                            <StyledButton onClick={()=>setDoSearch(true)}>Search</StyledButton>\r\n                            <StyledButton onClick={handleClearSearch}>Clear Search</StyledButton>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </Col>\r\n            </Row>\r\n            <h1>Product List</h1>\r\n            {products.length === 0 ? loading : <Container style={{width: \"100%\"}} fluid>\r\n                {filtCategory === '---' ? \r\n                generateList() :\r\n                generateList(filteredList)}\r\n            </Container>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProductsList;","import { createContext } from \"react\";\r\n\r\nconst CartContext = createContext([]);\r\n\r\nCartContext.displayName = 'CartContext';\r\n\r\nexport default CartContext;","import StyledButton from \"../common/Button\"\r\nimport { Form } from \"react-bootstrap\"\r\nimport Modal from \"react-bootstrap/Modal\"\r\nimport { useContext } from \"react\"\r\nimport CartContext from \"../Contexts/CartContext\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useState } from \"react\"\r\n\r\nconst AddToCart = (props) => {\r\n    const { AddItem } = useContext(CartContext)\r\n    const { push } = useHistory();\r\n    const [qty, setQty] = useState(1);\r\n\r\n    const handleAddProduct = (event) => {\r\n        event.preventDefault();\r\n        AddItem(\r\n            props.id, \r\n            parseInt(event.target.previousElementSibling.value),\r\n            props.title,\r\n            props.image,\r\n            props.price\r\n        )\r\n        push('/products');\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal\r\n            show={props.show}\r\n            onHide={props.onHide}\r\n            size='lg'\r\n            aria-labelledby='contained-modal-title-vcenter'\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    {props.title}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form inline>\r\n                    <Form.Label htmlFor=\"AddToCartFormQuantity\" srOnly>\r\n                        Quantity\r\n                    </Form.Label>\r\n                    <input \r\n                        type='number' \r\n                        id=\"AddToCartFormQuantity\" \r\n                        name=\"AddToCartFormQuantity\" \r\n                        min=\"1\"\r\n                        value={qty}\r\n                        onChange={(e) => setQty(e.target.value)}\r\n                    />\r\n                    <StyledButton onClick={handleAddProduct}>Add to Cart</StyledButton>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddToCart;","import { Navbar, Image } from \"react-bootstrap\"\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst GoBackNavbar = () => {\r\n    const history = useHistory();\r\n\r\n    const goBack = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    return (\r\n        <Navbar>\r\n            <Image \r\n                src={`${process.env.PUBLIC_URL}/arrow-left.svg`}\r\n                alt='Go Back arrow'\r\n                onClick={goBack} \r\n                style={{cursor:\"pointer\"}}\r\n            />\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default GoBackNavbar;","import { useEffect, useState } from \"react\";\r\nimport { getSingleProduct } from \"../Utility/FakeStore\";\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Image from 'react-bootstrap/Image';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport AddToCart from \"./AddToCart\";\r\nimport GoBackNavbar from \"../Navbar/GoBackNavbar\";\r\nimport StyledButton from \"../common/Button\"\r\n\r\nconst ProductDetails = (props) => {\r\n    const [product, setProduct] = useState({});\r\n    const [modalShow, setModalShow] = useState(false)\r\n\r\n    const {index} = useParams();\r\n\r\n    useEffect(()=>{\r\n        getSingleProduct(index).then(setProduct);\r\n    },[product.id, index])\r\n\r\n    const loading = <Spinner animation='border' role='status'>\r\n        <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>;\r\n\r\n    const handleAddProduct = () => {\r\n        setModalShow(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <GoBackNavbar />\r\n            {Object.keys(product).length === 0 ? loading : (\r\n                <Container>\r\n                    <div>\r\n                        <Image src={product.image} style={{width:\"20%\"}} rounded />\r\n                        <h2>{product.title}</h2>\r\n                        <p>${product.price.toFixed(2)}</p>\r\n                        <p>{product.category}</p>\r\n                        <p>{product.description}</p>\r\n                    </div>\r\n                    <AddToCart \r\n                        show={modalShow}\r\n                        onHide={() => setModalShow(false)}\r\n                        id={index}\r\n                        title={product.title}\r\n                        image={product.image}\r\n                        price={product.price}\r\n                    />\r\n                    <div>\r\n                        <StyledButton onClick={handleAddProduct}>Add to cart</StyledButton>\r\n                    </div>\r\n                </Container>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductDetails;","import { useContext } from \"react\";\r\nimport CartContext from \"../Contexts/CartContext\";\r\n\r\nexport const useCart = () => {return useContext(CartContext)}","import Navbar from \"react-bootstrap/Navbar\"\r\nimport Nav from \"react-bootstrap/Nav\"\r\nimport Image from \"react-bootstrap/Image\"\r\nimport { Link } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\nimport { Badge } from \"react-bootstrap\"\r\nimport { useCart } from \"../hooks\"\r\n\r\nconst StyledNavbarBrand = styled(Navbar.Brand)`\r\n    font-family: 'Acme', sans-serif;\r\n\r\n    a:link {\r\n        color: #009900;\r\n    }\r\n\r\n    a:visited {\r\n        color: #009900;\r\n    }\r\n\r\n    a:hover {\r\n        color: white;\r\n    }\r\n`\r\n\r\nconst MainSiteNavbar = () => {\r\n    const { cartQty } = useCart();\r\n    return (\r\n        <Navbar bg='dark' variant='dark'>\r\n            <StyledNavbarBrand style={{fontFamily: \"'Acme', sans-serif\"}}>\r\n                <Link to='/'><Image src={`${process.env.PUBLIC_URL}/logo64.png`} alt='Logo' />Crazy Stevens Emporium</Link>\r\n            </StyledNavbarBrand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\" style={{display:\"flex\", alignContent:\"space-around\"}}>\r\n                    <Link to='/products'>Browse</Link>\r\n                    <Link to='/cart'>\r\n                        <Image src={`${process.env.PUBLIC_URL}/cart4.svg`} alt='cart'/>\r\n                        <Badge variant='dark'>{cartQty}</Badge>\r\n                        <span className='sr-only'>items in cart</span>\r\n                    </Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default MainSiteNavbar","import { useState } from \"react\"\r\nimport CartContext from \"../Contexts/CartContext\"\r\n\r\nconst CartProvider = ({ children }) => {\r\n    const [cart, setCart] = useState([]);\r\n    const [cartQty, setCartQty] = useState(0);\r\n    const [cartTotalPrice, setCartPrice] = useState(0);\r\n\r\n    // Add a new item to the cart\r\n    // id: Id of product to add to cart\r\n    // qty: Amount of iindicated product to add to cart\r\n    // title: Readable description of product\r\n    // image: Url for image of proudct\r\n    // price: Cost per unit of product\r\n    const AddItem = (id, qty, title, image, price) => {\r\n        const CartItem = {\r\n            id, \r\n            qty, \r\n            title, \r\n            image, \r\n            price\r\n        }\r\n        setCart([...cart, CartItem]);\r\n        setCartQty(qty+cartQty);\r\n        setCartPrice(cartTotalPrice+(price*qty))\r\n    }\r\n\r\n    // Remove an item from the cart\r\n    // id: id of product to remove\r\n    const RemoveItem = (idx) => {\r\n        setCartQty(cartQty-cart[idx].qty);\r\n        setCartPrice(cartTotalPrice-(cart[idx].qty*cart[idx].price));\r\n        cart.splice(idx, 1);\r\n    }\r\n\r\n    // Update the quantity of item in cart\r\n    // id: id of product to update\r\n    // qty: New quantity of product. Replaces old value.\r\n    const UpdateQty = (idx, qty) => {\r\n        //New Qty is 0\r\n        setCartQty(cartQty+(qty-cart[idx].qty))\r\n        setCartPrice(cartTotalPrice+(qty-cart[idx].qty)*cart[idx].price)\r\n        if (!qty) {\r\n            cart.splice(idx, 1)\r\n        }\r\n        else {\r\n            cart[idx].qty = qty\r\n        }\r\n    }\r\n\r\n    const ClearCart = () => {\r\n        setCart([]);\r\n        setCartQty(0);\r\n        setCartPrice(0);\r\n    }\r\n\r\n    return (\r\n        <CartContext.Provider value={{cart, AddItem, RemoveItem, UpdateQty, cartQty, cartTotalPrice, ClearCart}}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartProvider","import { useState } from \"react\";\r\nimport { Col, Container, Form, Image, Row } from \"react-bootstrap\";\r\nimport StyledButton from \"../common/Button\";\r\nimport { useCart } from \"../hooks\";\r\n\r\nconst CartItem =({index, title, image, qty, price}) => {\r\n    const {RemoveItem, UpdateQty} = useCart();\r\n    const [newQty, setNewQty] = useState(qty);\r\n\r\n    const handleQtyChange = (e) => {\r\n        e.preventDefault();\r\n        UpdateQty(index, parseInt(e.target.previousElementSibling.value));\r\n    }\r\n\r\n    const handleDeleteProduct = (e) => {\r\n        e.preventDefault();\r\n        RemoveItem(index);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row style={{border: \"2px\"}}>\r\n                <Col md={2}>\r\n                    <Image src={image} alt={image} thumbnail></Image>\r\n                </Col>\r\n                <Col>\r\n                    {title}\r\n                </Col>\r\n                <Col>\r\n                    ${(price*qty).toFixed(2)}\r\n                </Col>\r\n                <Col>\r\n                    <Form inline>\r\n                        <input \r\n                            type='number' \r\n                            min='1' \r\n                            value={newQty} \r\n                            onChange={(e) => setNewQty(e.target.value)} \r\n                        />\r\n                        <StyledButton onClick={handleQtyChange}>Update Quantity</StyledButton>\r\n                    </Form>\r\n                </Col>\r\n                <Col>\r\n                    <Image \r\n                        src={`${process.env.PUBLIC_URL}/x-circle-fill.svg`} \r\n                        alt='delete item'\r\n                        onClick={handleDeleteProduct}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CartItem;","import { Container, Form, Row } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport StyledButton from \"../common/Button\";\r\nimport { useCart } from \"../hooks\";\r\nimport GoBackNavbar from \"../Navbar/GoBackNavbar\";\r\nimport CartItem from \"./CartItem\";\r\n\r\nconst Cart = () => {\r\n    const { cart, cartTotalPrice } = useCart();\r\n    const history = useHistory();\r\n\r\n    const handleCheckout = (e) => {\r\n        history.push('/checkout');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <GoBackNavbar />\r\n            <Container>\r\n                <Row><h2>Your Shopping Cart</h2></Row>\r\n                {!cart.length ? \r\n                    <p>Your cart is empty.</p>: \r\n                    cart.map((product, index) => {\r\n                    return(<CartItem\r\n                        key={product.id}\r\n                        index={index}\r\n                        title={product.title}\r\n                        image={product.image}\r\n                        qty={product.qty}\r\n                        price={product.price}\r\n                    />)\r\n                })}\r\n                <Row><b>Your Total: ${cartTotalPrice.toFixed(2)}</b></Row>\r\n                <Row>\r\n                    <Form inline>\r\n                        <StyledButton onClick={handleCheckout}>Checkout</StyledButton>\r\n                    </Form>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cart;","import { Col, Form, Container } from \"react-bootstrap\";\r\nimport { useState } from 'react'\r\nimport StyledButton from \"../common/Button\";\r\n\r\nconst ShippingAddressForm = (props) => {\r\n    const [validated, setValidated] = useState(false)\r\n    const [fName, setFName] = useState('');\r\n    const [lName, setLName] = useState('');\r\n    const [address1, setAddress1] = useState('');\r\n    const [address2, setAddress2] = useState('');\r\n    const [city, setCity] = useState('')\r\n    const [state, setState] = useState('')\r\n    const [zip, setZip] = useState('');\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        event.preventDefault();\r\n\r\n        if (form.checkValidity() === false) {    \r\n            event.stopPropagation();\r\n        }\r\n\r\n        setValidated(true);\r\n        props.saveShipAddress({\r\n            fName, lName, address1, address2, city, state, zip\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId='formGroupShippingFirstName'>\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control type='text' placeholder='First Name' value={fName} onChange={(e) => setFName(e.target.value)} required/>\r\n                        <Form.Control.Feedback type='invalid'>\r\n                            Please enter your name\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId='formGroupShippingLastName'>\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type='text' placeholder='Last Name' value={lName} onChange={(e) => setLName(e.target.value)}/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Group controlId='formGroupShippingAddress1'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control type='text' placeholder='PO Box or Street Address' value={address1} onChange={(e) => setAddress1(e.target.value)} required/>\r\n                    <Form.Control.Feedback type='invalid'>\r\n                        Enter your address\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId='formGroupShippingAddress2'>\r\n                    <Form.Label>Address 2</Form.Label>\r\n                    <Form.Control type='text' placeholder='Apt, building, suite, unit, floor, etc.' value={address2} onChange={(e) => setAddress2(e.target.value)}/>\r\n                </Form.Group>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId='formGroupShippingCity'>\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control type='text' placeholder='city' value={city} onChange={(e) => setCity(e.target.value)} required/>\r\n                        <Form.Control.Feedback type='invalid'>\r\n                            Enter your address\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId='formGroupShippingState'>\r\n                        <Form.Label>State</Form.Label>\r\n                        <Form.Control type='text' placeholder='state' value={state} onChange={(e) => setState(e.target.value)} required/>\r\n                        <Form.Control.Feedback type='invalid'>\r\n                            Enter your state\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId='formGroupShippingZip'>\r\n                        <Form.Label>Zip</Form.Label>\r\n                        <Form.Control type='text' placeholder='zip' value={zip} onChange={(e) => setZip(e.target.value)} required/>\r\n                        <Form.Control.Feedback type='invalid'>\r\n                            Enter your zip\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <StyledButton type='submit'>Save</StyledButton>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ShippingAddressForm;","// Function to test whether a passed in number is a possible valid CC number\r\n// It only checks if its possible. It might be the case\r\n// that the specific number hasn't yet been assigned to a card\r\nexport const testCCNum = (num) => {\r\n    return Luhn(num) && \r\n        (isVisa(num) || \r\n        isMasterCard(num) ||\r\n        isAmericanExpress(num) ||\r\n        isDinersClub(num) ||\r\n        isDiscover(num) ||\r\n        isJCB(num));\r\n}\r\n\r\n// Tests a possible credit card using the Luhn algorithm\r\n// https://en.wikipedia.org/wiki/Luhn_algorithm\r\n// Basic steps are:\r\n// 1. Convert number to an array\r\n// 2. Starting with rightmost non-check digit, double every other digit.\r\n// 3. If any doubled digit is > 10, add those digits together.\r\n// 4. Add all digits together, including the check digit (the rightmost digit)\r\n// 5. Do modulo 10. If 0, then number is possible valid credit card number.\r\nexport const Luhn = (testNum) => {\r\n    const arrOfNum = IntToArray(testNum);\r\n\r\n    var i;\r\n    for(i = arrOfNum.length-2; i >= 0; i -= 2) {\r\n        arrOfNum[i] = AddDigits(arrOfNum[i]*2);\r\n    }\r\n\r\n    var sum = 0;\r\n    arrOfNum.forEach((dig) => {\r\n        sum += dig;\r\n    })\r\n    return (sum % 10) === 0;\r\n}\r\n\r\n// Helper method for Luhn algorithm\r\n// Used for when doubling a digit raises it above 10. \r\n// Only works for sums < 20\r\nconst AddDigits = (num) => {\r\n    if (num < 10) {\r\n        return num;\r\n    }\r\n    return num - 9; // Only works if num is < 20; which should be the case\r\n}\r\n\r\n// Helper method for Luhn algorithm\r\n// Takes in a string and return the \r\nconst IntToArray = (numAsStr) => {\r\n    const arr = [];\r\n\r\n    numAsStr.split('').forEach(element => {\r\n        arr.push(parseInt(element));\r\n    });\r\n\r\n    return arr;\r\n}\r\n\r\nconst isVisa = (num) => {\r\n    const re = /^4[0-9]{12}(?:[0-9]{3})?$/;\r\n    return re.test(num);\r\n}\r\n\r\nconst isMasterCard = (num) => {\r\n    const re = /^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$/;\r\n    return re.test(num);\r\n}\r\n\r\nconst isAmericanExpress = (num) => {\r\n    const re = /^3[47][0-9]{13}$/;\r\n    return re.test(num);\r\n}\r\n\r\nconst isDinersClub = (num) => {\r\n    const re = /^3(?:0[0-5]|[68][0-9])[0-9]{11}$/;\r\n    return re.test(num);\r\n}\r\n\r\nconst isDiscover = (num) => {\r\n    const re = /^6(?:011|5[0-9]{2})[0-9]{12}$/;\r\n    return re.test(num);\r\n}\r\n\r\nconst isJCB = (num) => {\r\n    const re = /^(?:2131|1800|35\\d{3})\\d{11}$/;\r\n    return re.test(num);\r\n}","import { Form } from \"react-bootstrap\"\r\n\r\nconst MonthSelectBox = () => {\r\n    return (\r\n        <Form.Control as='select' custom required>\r\n            <option>01</option>\r\n            <option>02</option>\r\n            <option>03</option>\r\n            <option>04</option>\r\n            <option>05</option>\r\n            <option>06</option>\r\n            <option>07</option>\r\n            <option>08</option>\r\n            <option>09</option>\r\n            <option>10</option>\r\n            <option>11</option>\r\n            <option>12</option>\r\n        </Form.Control>\r\n    )\r\n}\r\n\r\nexport default MonthSelectBox","import { Form } from \"react-bootstrap\"\r\n\r\nconst YearSelectBox = () => {\r\n    return (\r\n        <Form.Control as='select' custom required>\r\n            <option>21</option>\r\n            <option>22</option>\r\n            <option>23</option>\r\n            <option>24</option>\r\n            <option>25</option>\r\n            <option>26</option>\r\n            <option>27</option>\r\n        </Form.Control>\r\n    )\r\n}\r\n\r\nexport default YearSelectBox;","import { useState } from \"react\";\r\nimport { Container, Form, Col } from \"react-bootstrap\";\r\nimport StyledButton from \"../common/Button\";\r\nimport { testCCNum } from \"../Utility/CreditCard\";\r\nimport MonthSelectBox from './MonthSelectBox';\r\nimport YearSelectBox from './YearSelectBox';\r\n\r\nconst CreditCardForm = (props) => {\r\n    const [validated, setValidated] = useState(false)\r\n    const [ccNum, setCCNum] = useState('');\r\n    const [expMonth, setExpMonth] = useState('01');\r\n    const [expYear, setExpYear] = useState('21');\r\n    const [secNum, setSecNum] = useState('');\r\n    const [zip, setZip] = useState('');\r\n    const [validCCNum, setValidCCNum] = useState(false)\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        event.preventDefault();\r\n\r\n        if (form.checkValidity() === false) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        props.saveCCInfo({\r\n            ccNum, expMonth, expYear, secNum, zip\r\n        })\r\n        setValidated(true);\r\n    }\r\n\r\n    const validateCCNnum = (e) => {\r\n        const ccIsValid = testCCNum(e.target.value)\r\n        console.log(ccIsValid);\r\n        setValidCCNum(!ccIsValid);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <Form.Group controlId='formGroupCreditCard'>\r\n                    <Form.Label>Credit Card Number</Form.Label>\r\n                    <Form.Control \r\n                        type='text' \r\n                        value={ccNum} \r\n                        onChange={(e) => setCCNum(e.target.value)} \r\n                        onBlur={validateCCNnum} \r\n                        isInvalid={validCCNum}\r\n                        required/>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Please enter a valid card\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"auto\" controlId='formGroupCCExpireDateMonth'>\r\n                        <Form.Label>Expiration Month</Form.Label>\r\n                        <MonthSelectBox value={expMonth} setExpMonth={(e) => setExpMonth(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md=\"auto\" controlId='formGroupCCExpireYear'>\r\n                        <Form.Label>Expiration Year</Form.Label>\r\n                        <YearSelectBox value={expYear} onChange={(e) => setExpYear(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId='formGroupCCSecurityCode'>\r\n                        <Form.Label>Security Code</Form.Label>\r\n                        <Form.Control \r\n                            type='text'\r\n                            maxLength={3}\r\n                            minLength={3}\r\n                            value={secNum}\r\n                            onChange={(e) => setSecNum(e.target.value)}\r\n                            required\r\n                        />\r\n                        <Form.Control.Feedback type='invalid'>\r\n                            Enter the security code.\r\n                        </Form.Control.Feedback>\r\n                        <Form.Text id=\"secCodeHelpBlock\" muted>\r\n                            This code can usually be found on the back of your credit card.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId='formGroupCCZip'>\r\n                        <Form.Label>Zip</Form.Label>\r\n                        <Form.Control type='text' value={zip} onChange={(e) => setZip(e.target.value)} required/>\r\n                        <Form.Control.Feedback type='invalid'>\r\n                            Enter the zip associated with your card\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <StyledButton type='submit'>Next</StyledButton>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CreditCardForm;","import { Row } from \"react-bootstrap\";\r\nimport { useCart } from \"../hooks\";\r\nimport CartItem from './CartItem';\r\n\r\nconst CartList = (props) => {\r\n    const { cart } = useCart();\r\n    return (\r\n        <Row>\r\n            {!cart.length ? \r\n                    <p>Your cart is empty.</p>: \r\n                    cart.map((product, index) => {\r\n                    return(<CartItem\r\n                        key={product.id}\r\n                        index={index}\r\n                        title={product.title}\r\n                        image={product.image}\r\n                        qty={product.qty}\r\n                        price={product.price}\r\n                    />)\r\n                })}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartList","import { Col, Form, Container } from \"react-bootstrap\";\r\nimport { useState } from 'react'\r\nimport StyledButton from \"../common/Button\";\r\n\r\nconst BillingAddressForm = (props) => {\r\n    const [validated, setValidated] = useState(false)\r\n    const [fName, setFName] = useState('');\r\n    const [lName, setLName] = useState('');\r\n    const [address1, setAddress1] = useState('');\r\n    const [address2, setAddress2] = useState('');\r\n    const [city, setCity] = useState('')\r\n    const [state, setState] = useState('')\r\n    const [zip, setZip] = useState('');\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        event.preventDefault();\r\n\r\n        if (form.checkValidity() === false) {    \r\n            event.stopPropagation();\r\n        }\r\n\r\n        setValidated(true);\r\n        props.saveBillAddress({\r\n            fName, lName, address1, address2, city, state, zip\r\n        })\r\n    }\r\n\r\n    const handleUseShipAdd = (e) => {\r\n        if(e.target.checked) {\r\n            setFName(props.fName);\r\n            setLName(props.lName);\r\n            setAddress1(props.address1);\r\n            setAddress2(props.address2);\r\n            setCity(props.city);\r\n            setState(props.state);\r\n            setZip(props.zip);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <Form.Check type=\"switch\" id=\"use-ship-add-switch\" label=\"Use Shipping Address?\" onChange={handleUseShipAdd} />\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId='formGroupShippingFirstName'>\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control type='text' placeholder='First Name' value={fName} onChange={(e) => setFName(e.target.value)} required/>\r\n                        <Form.Control.Feedback type='invalid'>\r\n                            Please enter your name\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId='formGroupShippingLastName'>\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type='text' placeholder='Last Name' value={lName} onChange={(e) => setLName(e.target.value)}/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Group controlId='formGroupShippingAddress1'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control type='text' placeholder='PO Box or Street Address' value={address1} onChange={(e) => setAddress1(e.target.value)} required/>\r\n                    <Form.Control.Feedback type='invalid'>\r\n                        Enter your address\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId='formGroupShippingAddress2'>\r\n                    <Form.Label>Address 2</Form.Label>\r\n                    <Form.Control type='text' placeholder='Apt, building, suite, unit, floor, etc.' value={address2} onChange={(e) => setAddress2(e.target.value)}/>\r\n                </Form.Group>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId='formGroupShippingCity'>\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control type='text' placeholder='city' value={city} onChange={(e) => setCity(e.target.value)} required/>\r\n                        <Form.Control.Feedback type='invalid'>\r\n                            Enter your address\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId='formGroupShippingState'>\r\n                        <Form.Label>State</Form.Label>\r\n                        <Form.Control type='text' placeholder='state' value={state} onChange={(e) => setState(e.target.value)} required/>\r\n                        <Form.Control.Feedback type='invalid'>\r\n                            Enter your state\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId='formGroupShippingZip'>\r\n                        <Form.Label>Zip</Form.Label>\r\n                        <Form.Control type='text' placeholder='zip' value={zip} onChange={(e) => setZip(e.target.value)} required/>\r\n                        <Form.Control.Feedback type='invalid'>\r\n                            Enter your zip\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <StyledButton type='submit'>Save</StyledButton>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default BillingAddressForm;","export const calcShipping = (numItems) => {\r\n    return numItems * 0.65\r\n}\r\n\r\nexport const calcTaxes = (totalPrice) => {\r\n    return totalPrice*0.1\r\n}","import { Accordion, Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport ShippingAddressForm from \"./ShippingAddressForm\";\r\nimport CreditCardForm from \"./CreditCardForm\";\r\nimport styled from \"styled-components\";\r\nimport { useCart } from \"../hooks\";\r\nimport CartList from \"../Cart/CartList\";\r\nimport StyledButton from \"../common/Button\";\r\nimport { useState } from \"react\";\r\nimport BillingAddressForm from \"./BillingAddressForm\";\r\nimport { calcShipping, calcTaxes } from \"../Utility/ShippingAndTaxes\";\r\n\r\nconst CheckoutCard = styled(Card)`\r\n    width: 90%;\r\n`\r\n\r\nconst Checkout = (props) => {\r\n    const { cartTotalPrice, cartQty, ClearCart } = useCart();\r\n    const [shipAddresss, setShipAddress] = useState({});\r\n    const [ccInfo, setccInfo] = useState({});\r\n    const [billAddress, setBillAddress] = useState({});\r\n    const [orderCompleteMessage, setOrderCompleteMessage] = useState('');\r\n\r\n    const saveShipAddress = (newAdd) => {\r\n        console.log(newAdd)\r\n        setShipAddress(newAdd);\r\n    }\r\n\r\n    const saveBillAddress = (newAdd) => {\r\n        setBillAddress(newAdd);\r\n    }\r\n\r\n    const saveCCInfo = (newCC) => {\r\n        setccInfo(newCC);\r\n    }\r\n\r\n    const handleSubmitOrder = () => {\r\n        if(Object.keys(shipAddresss).length &&\r\n        Object.keys(ccInfo).length &&\r\n        Object.keys(billAddress).length) {\r\n            ClearCart();\r\n            setShipAddress({});\r\n            setccInfo({});\r\n            setBillAddress({});\r\n            setOrderCompleteMessage(\"Order complete.\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Accordion as={Col} md={8} defaultActiveKey=\"0\">\r\n                    <CheckoutCard>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                            Shipping Address\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                            <ShippingAddressForm saveShipAddress={saveShipAddress}/>\r\n                            \r\n                        </Accordion.Collapse>\r\n                    </CheckoutCard>\r\n                    <CheckoutCard>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                            Credit Card Info\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"1\">\r\n                            <CreditCardForm saveCCInfo={saveCCInfo} />\r\n                        </Accordion.Collapse>\r\n                    </CheckoutCard>\r\n                    <CheckoutCard>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"2\">\r\n                            Billing Address\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"2\">\r\n                            <BillingAddressForm {...shipAddresss} saveBillAddress={saveBillAddress}/>\r\n                        </Accordion.Collapse>\r\n                    </CheckoutCard>\r\n                    <CheckoutCard>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"3\">\r\n                            Cart\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"3\">\r\n                            <CartList />\r\n                        </Accordion.Collapse>\r\n                    </CheckoutCard>\r\n\r\n                </Accordion>\r\n                <CheckoutCard as={Col} md={4}>\r\n                    <Card.Body>\r\n                        <h3>Order Summary</h3>\r\n                        <Card.Text>Items: ${cartTotalPrice.toFixed(2)}</Card.Text>\r\n                        <Card.Text>Tax: ${calcTaxes(cartTotalPrice).toFixed(2)}</Card.Text>\r\n                        <Card.Text>S/H: ${calcShipping(cartQty).toFixed(2)}</Card.Text>\r\n                        Total: ${(cartTotalPrice+calcShipping(cartQty)+calcTaxes(cartTotalPrice)).toFixed(2)}\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <StyledButton onClick={handleSubmitOrder}>Submit Order</StyledButton>\r\n                    </Card.Footer>\r\n                </CheckoutCard>\r\n            </Row>\r\n            <h1>{orderCompleteMessage}</h1>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Checkout;","import { Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport ProductsList from './Products Overview/ProductsList';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ProductDetails from './Product Details/Product Details';\r\nimport MainSiteNavbar from './Navbar/Main Site Navbar';\r\nimport CartProvider from './Providers/CartProvider';\r\nimport Cart from './Cart/Cart';\r\nimport Checkout from './Checkout/Checkout';\r\n\r\nfunction App() {\r\n  return (\r\n    <CartProvider>\r\n      <MainSiteNavbar />\r\n      <Switch>\r\n        <Route path='/products' component={ProductsList} exact/>\r\n        <Route path='/products/:index' component={ProductDetails} />\r\n        <Route path='/cart' component={Cart} />\r\n        <Route path='/checkout' component={Checkout} />\r\n        <Route path='/' exact>\r\n          <h1>Welcome to my shop</h1>\r\n        </Route>\r\n      </Switch>\r\n    </CartProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}